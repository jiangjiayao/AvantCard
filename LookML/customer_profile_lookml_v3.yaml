####### for testing only, seprate bankcard and private label





#### credit_card_prod.model.lkml

  join: transunion_characteristic_data {
    relationship: one_to_one
    sql_on: ${transunion_characteristic_data.transunion_credit_report_id}=${cd_last_decision.transunion_credit_report_id} ;;
    fields: [id, # age_of_oldest_tradeline, age_of_newest_tradeline,
      # Experience With Credit
          # all tradelines
              number_of_trades, avg_number_of_trades, max_number_of_trades, min_number_of_trades, median_number_of_trades,
              months_since_oldest_trade_opened, avg_months_since_oldest_trade_opened, max_months_since_oldest_trade_opened, min_months_since_oldest_trade_opened, median_months_since_oldest_trade_opened,
              months_since_newest_trade_opened, avg_months_since_newest_trade_opened, max_months_since_newest_trade_opened, min_months_since_newest_trade_opened, median_months_since_newest_trade_opened,
          # credit cards
              number_of_creditcard_trades, avg_number_of_creditcard_trades, max_number_of_creditcard_trades, min_number_of_creditcard_trades, median_number_of_creditcard_trades,
              months_since_oldest_creditcard_trade_opened, avg_months_since_oldest_creditcard_trade_opened, max_months_since_oldest_creditcard_trade_opened, min_months_since_oldest_creditcard_trade_opened, median_months_since_oldest_creditcard_trade_opened,
              months_since_newest_creditcard_trade_opened, avg_months_since_newest_creditcard_trade_opened, max_months_since_newest_creditcard_trade_opened, min_months_since_newest_creditcard_trade_opened, median_months_since_newest_creditcard_trade_opened,
          # customer age
              age_of_customers, avg_age_of_customers,
      # Credit appetite
          # Number of inquiries in the past
              inquiries_past_6_months, avg_inquiries_past_6_months, max_inquiries_past_6_months, min_inquiries_past_6_months, median_inquiries_past_6_months,
              inquiries_past_12_months, avg_inquiries_past_12_months, max_inquiries_past_12_months, min_inquiries_past_12_months, median_inquiries_past_12_months,
              inquiries_past_24_months, avg_inquiries_past_24_months, max_inquiries_past_24_months, min_inquiries_past_24_months, median_inquiries_past_24_months,
          # recent accounts/credit cards
              trades_opened_past_3_months, avg_trades_opened_past_3_months, max_trades_opened_past_3_months, min_trades_opened_past_3_months, median_trades_opened_past_3_months,
              trades_opened_past_6_months, avg_trades_opened_past_6_months, max_trades_opened_past_6_months, min_trades_opened_past_6_months, median_trades_opened_past_6_months,
              creditcard_trades_opened_past_6_months, avg_creditcard_trades_opened_past_6_months, max_creditcard_trades_opened_past_6_months, min_creditcard_trades_opened_past_6_months, median_creditcard_trades_opened_past_6_months,
      # Credit usage
          # utilization of revolvers
              utilization_of_revolving_trades, avg_utilization_of_revovling_trades, max_utilization_of_revovling_trades, min_utilization_of_revovling_trades, median_utilization_of_revovling_trades,
          # utilization of credit cards
              utilization_of_creditcard_trades, avg_utilization_of_creditcard_trades, max_utilization_of_creditcard_trades, min_utilization_of_creditcard_trades, median_utilization_of_creditcard_trades,
          # overall balance & limit (including mortgage & home equity)
              total_balance, avg_balance, max_balance, min_balance, median_balance,
              total_limit, avg_limit, max_limit, min_limit, median_limit,
          # overall balance & limit (without mortgage & home equity)
              total_balance_without_mortgage_home_equity, avg_balance_without_mortgage_home_equity, max_balance_without_mortgage_home_equity, min_balance_without_mortgage_home_equity, median_balance_without_mortgage_home_equity,
              total_limit_without_mortgage_home_equity, avg_limit_without_mortgage, max_limit_without_mortgage, min_limit_without_mortgage, median_limit_without_mortgage,
          # number of cards, balance & limit for all cards
              number_of_open_creditcard_trades, avg_number_of_open_creditcard_trades, max_number_of_open_creditcard_trades, min_number_of_open_creditcard_trades, median_number_of_open_creditcard_trades,
              total_open_creditcard_trades_balance, avg_open_creditcard_trades_balance, max_open_creditcard_trades_balance, min_open_creditcard_trades_balance, median_open_creditcard_trades_balance,
              total_open_creditcard_trades_limit, avg_open_creditcard_trades_limit, max_open_creditcard_trades_limit, min_open_creditcard_trades_limit, median_open_creditcard_trades_limit,
      # Performance
          # public records
              number_of_public_records, avg_number_of_public_records, max_number_of_public_records, min_number_of_public_records, median_number_of_public_records,
              number_of_public_record_bankruptcies, avg_number_of_public_record_bankruptcies, max_number_of_public_record_bankruptcies, min_number_of_public_record_bankruptcies, median_number_of_public_record_bankruptcies,
              number_of_accounts_with_public_record_bankruptcies, total_number_of_accounts_selected, pct_of_accounts_with_public_record_bankruptcies,
              number_of_public_record_bankruptcies_past_24_months, avg_number_of_public_record_bankruptcies_past_24_months, max_number_of_public_record_bankruptcies_past_24_months, min_number_of_public_record_bankruptcies_past_24_months, median_number_of_public_record_bankruptcies_past_24_months,
              months_since_newest_public_record_bankruptcy, avg_months_since_newest_public_record_bankruptcy, max_months_since_newest_public_record_bankruptcy, min_months_since_newest_public_record_bankruptcy, median_months_since_newest_public_record_bankruptcy,
          # derogatory
              worst_rating_creditcard_trades_past_12_months, avg_worst_rating_creditcard_trades_past_12_months, max_worst_rating_creditcard_trades_past_12_months, min_worst_rating_creditcard_trades_past_12_months, median_worst_rating_creditcard_trades_past_12_months,
              number_30_delq_past_12_months, avg_number_30_delq_past_12_months, max_number_30_delq_past_12_months, min_number_30_delq_past_12_months, median_number_30_delq_past_12_months,
              number_of_accounts_with_30_delq_past_12_months, pct_of_accounts_with_30_delq_past_12_months,
              number_60_delq_past_12_months, avg_number_60_delq_past_12_months, max_number_60_delq_past_12_months, min_number_60_delq_past_12_months, median_number_60_delq_past_12_months,
              number_of_accounts_with_60_delq_past_12_months, pct_of_accounts_with_60_delq_past_12_months,
      # Approval checks
          # read directly from TU report
              open_bankruptcy, open_satisfactory_trades, total_number_of_public_records, open_collections_accounts, total_trades, total_credit_inquires,
              credit_inquiries_last_6_months, credit_inquiries_last_12_months, collections_inquiries, collections_inquiries_last_6_months, bankruptcies_last_24_months,
              count_bankruptcies, total_amount_collections, total_amount_non_medical_collections, tax_liens, months_since_most_recent_public_record_bankruptcy,
              age_oldest_trade_months, age_newest_trade_months, open_finance_installment_trades, months_since_most_recent_collections_inquiry, months_since_most_recent_credit_inquiry,
              total_balance_excluding_housing, total_credit_card_balance, percentage_of_open_cc_with75p_util, utilization_credit_card, late30,
          # derived fields
              fail_new_rules
    ]
  }










#### transunion_characteristic_data.view.lkml

# Experience With Credit
  # all tradelines
  dimension: number_of_trades {
    group_label: "Experience With Credit"
    label: "AT01S: Number of Trades"
    type: number
    value_format_name: decimal_0
    sql: case when (((${parsed_data}->>'00V71')::json->>'AT01S')::numeric < 0)  or (((${parsed_data}->>'00V71')::json->>'AT01S')::numeric = 999) then NULL else ((${parsed_data}->>'00V71')::json->>'AT01S')::numeric end;;
  }

  measure: avg_number_of_trades {
    group_label: "Experience With Credit"
    label: "Average Number of Trades (AT01S)"
    type: average
    value_format_name: decimal_0
    sql: ${number_of_trades} ;;
  }

  measure: max_number_of_trades {
    group_label: "Experience With Credit"
    label: "Maximum Number of Trades (AT01S)"
    type: max
    value_format_name: decimal_0
    sql: ${number_of_trades} ;;
  }

  measure: min_number_of_trades {
    group_label: "Experience With Credit"
    label: "Minimum Number of Trades (AT01S)"
    type: min
    value_format_name: decimal_0
    sql: ${number_of_trades} ;;
  }

  measure: median_number_of_trades {
    group_label: "Experience With Credit"
    label: "Median Number of Trades (AT01S)"
    type: median
    value_format_name: decimal_0
    sql: ${number_of_trades} ;;
  }

  dimension: months_since_oldest_trade_opened {
    group_label: "Experience With Credit"
    label: "AT20S: Months Since Oldest Trade Opened"
    type: number
    value_format_name: decimal_0
    sql: case when (((${parsed_data}->>'00V71')::json->>'AT20S')::numeric < 0)  or (((${parsed_data}->>'00V71')::json->>'AT20S')::numeric = 999) then NULL else ((${parsed_data}->>'00V71')::json->>'AT20S')::numeric end;;
  }

  measure: avg_months_since_oldest_trade_opened {
    group_label: "Experience With Credit"
    label: "Average Months Since Oldest Trade Opened (AT20S)"
    type: average
    value_format_name: decimal_0
    sql: ${months_since_oldest_trade_opened} ;;
  }

  measure: max_months_since_oldest_trade_opened {
    group_label: "Experience With Credit"
    label: "Maximum Months Since Oldest Trade Opened (AT20S)"
    type: max
    value_format_name: decimal_0
    sql: ${months_since_oldest_trade_opened} ;;
  }

  measure: min_months_since_oldest_trade_opened {
    group_label: "Experience With Credit"
    label: "Minimum Months Since Oldest Trade Opened (AT20S)"
    type: min
    value_format_name: decimal_0
    sql: ${months_since_oldest_trade_opened} ;;
  }

  measure: median_months_since_oldest_trade_opened {
    group_label: "Experience With Credit"
    label: "Median Months Since Oldest Trade Opened (AT20S)"
    type: median
    value_format_name: decimal_0
    sql: ${months_since_oldest_trade_opened} ;;
  }

  dimension: months_since_newest_trade_opened {
    group_label: "Experience With Credit"
    label: "AT21S: Months Since Newest Trade Opened"
    type: number
    value_format_name: decimal_0
    sql: case when (((${parsed_data}->>'00V71')::json->>'AT21S')::numeric < 0)  or (((${parsed_data}->>'00V71')::json->>'AT21S')::numeric = 999) then NULL else ((${parsed_data}->>'00V71')::json->>'AT21S')::numeric end;;
  }

  measure: avg_months_since_newest_trade_opened {
    group_label: "Experience With Credit"
    label: "Average Months Since Newest Trade Opened (AT21S)"
    type: average
    value_format_name: decimal_0
    sql: ${months_since_newest_trade_opened} ;;
  }

  measure: max_months_since_newest_trade_opened {
    group_label: "Experience With Credit"
    label: "Maximum Months Since Newest Trade Opened (AT21S)"
    type: max
    value_format_name: decimal_0
    sql: ${months_since_newest_trade_opened} ;;
  }

  measure: min_months_since_newest_trade_opened {
    group_label: "Experience With Credit"
    label: "Minimum Months Since Newest Trade Opened (AT21S)"
    type: min
    value_format_name: decimal_0
    sql: ${months_since_newest_trade_opened} ;;
  }

  measure: median_months_since_newest_trade_opened {
    group_label: "Experience With Credit"
    label: "Median Months Since Newest Trade Opened (AT21S)"
    type: median
    value_format_name: decimal_0
    sql: ${months_since_newest_trade_opened} ;;
  }

  # credit cards
  dimension: number_of_creditcard_trades {
    group_label: "Experience With Credit"
    label: "BC01S: Number of Credit Card Trades"
    description: "BC01S: Number of Credit Card Trades, Not Including Private Label Cards"
    type: number
    value_format_name: decimal_0
    sql: case when (((${parsed_data}->>'00V71')::json->>'BC01S')::numeric < 0)  or (((${parsed_data}->>'00V71')::json->>'BC01S')::numeric = 999) then NULL else ((${parsed_data}->>'00V71')::json->>'BC01S')::numeric end;;
  }

  measure: avg_number_of_creditcard_trades {
    group_label: "Experience With Credit"
    label: "Average Number of Credit Card Trades (BC01S)"
    description: "Average Number of Credit Card Trades, Not Including Private Label Cards (BC01S)"
    type: average
    value_format_name: decimal_0
    sql: ${number_of_creditcard_trades} ;;
  }

  measure: max_number_of_creditcard_trades {
    group_label: "Experience With Credit"
    label: "Maximum Number of Credit Card Trades (BC01S)"
    description: "Maximum Number of Credit Card Trades, Not Including Private Label Cards (BC01S)"
    type: max
    value_format_name: decimal_0
    sql: ${number_of_creditcard_trades} ;;
  }

  measure: min_number_of_creditcard_trades {
    group_label: "Experience With Credit"
    label: "Minimum Number of Credit Card Trades (BC01S)"
    description: "Minimum Number of Credit Card Trades, Not Including Private Label Cards (BC01S)"
    type: min
    value_format_name: decimal_0
    sql: ${number_of_creditcard_trades} ;;
  }

  measure: median_number_of_creditcard_trades {
    group_label: "Experience With Credit"
    label: "Median Number of Credit Card Trades (BC01S)"
    description: "Median Number of Credit Card Trades, Not Including Private Label Cards (BC01S)"
    type: median
    value_format_name: decimal_0
    sql: ${number_of_creditcard_trades} ;;
  }

  dimension: months_since_oldest_creditcard_trade_opened {
    group_label: "Experience With Credit"
    label: "BC20S: Months Since Oldest Credit Card Trade Opened"
    type: number
    value_format_name: decimal_0
    sql: case when (((${parsed_data}->>'00V71')::json->>'BC20S')::numeric < 0)  or (((${parsed_data}->>'00V71')::json->>'BC20S')::numeric = 999) then NULL else ((${parsed_data}->>'00V71')::json->>'BC20S')::numeric end;;
  }

  measure: avg_months_since_oldest_creditcard_trade_opened {
    group_label: "Experience With Credit"
    label: "Average Months Since Oldest Credit Card Trade Opened (BC20S)"
    type: average
    value_format_name: decimal_0
    sql: ${months_since_oldest_creditcard_trade_opened} ;;
  }

  measure: max_months_since_oldest_creditcard_trade_opened {
    group_label: "Experience With Credit"
    label: "Maximum Months Since Oldest Credit Card Trade Opened (BC20S)"
    type: max
    value_format_name: decimal_0
    sql: ${months_since_oldest_creditcard_trade_opened} ;;
  }

  measure: min_months_since_oldest_creditcard_trade_opened {
    group_label: "Experience With Credit"
    label: "Minimum Months Since Oldest Credit Card Trade Opened (BC20S)"
    type: min
    value_format_name: decimal_0
    sql: ${months_since_oldest_creditcard_trade_opened} ;;
  }

  measure: median_months_since_oldest_creditcard_trade_opened {
    group_label: "Experience With Credit"
    label: "Median Months Since Oldest Credit Card Trade Opened (BC20S)"
    type: median
    value_format_name: decimal_0
    sql: ${months_since_oldest_creditcard_trade_opened} ;;
  }

  dimension: months_since_newest_creditcard_trade_opened {
    group_label: "Experience With Credit"
    label: "BC21S: Months Since Newest Credit Card Trade Opened"
    type: number
    value_format_name: decimal_0
    sql: case when (((${parsed_data}->>'00V71')::json->>'BC21S')::numeric < 0)  or (((${parsed_data}->>'00V71')::json->>'BC21S')::numeric = 999) then NULL else ((${parsed_data}->>'00V71')::json->>'BC21S')::numeric end;;
  }

  measure: avg_months_since_newest_creditcard_trade_opened {
    group_label: "Experience With Credit"
    label: "Average Months Since Newest Credit Card Trade Opened (BC21S)"
    type: average
    value_format_name: decimal_0
    sql: ${months_since_newest_creditcard_trade_opened} ;;
  }

  measure: max_months_since_newest_creditcard_trade_opened {
    group_label: "Experience With Credit"
    label: "Maximum Months Since Newest Credit Card Trade Opened (BC21S)"
    type: max
    value_format_name: decimal_0
    sql: ${months_since_newest_creditcard_trade_opened} ;;
  }

  measure: min_months_since_newest_creditcard_trade_opened {
    group_label: "Experience With Credit"
    label: "Minimum Months Since Newest Credit Card Trade Opened (BC21S)"
    type: min
    value_format_name: decimal_0
    sql: ${months_since_newest_creditcard_trade_opened} ;;
  }

  measure: median_months_since_newest_creditcard_trade_opened {
    group_label: "Experience With Credit"
    label: "Median Months Since Newest Credit Card Trade Opened (BC21S)"
    type: median
    value_format_name: decimal_0
    sql: ${months_since_newest_creditcard_trade_opened} ;;
  }

  # retail trades
  dimension: number_of_retail_trades {
    group_label: "Experience With Credit"
    label: "RT01S: Number of Retail Trades"
    type: number
    value_format_name: decimal_0
    sql: case when (((${parsed_data}->>'00V71')::json->>'RT01S')::numeric < 0)  or (((${parsed_data}->>'00V71')::json->>'RT01S')::numeric = 999) then NULL else ((${parsed_data}->>'00V71')::json->>'RT01S')::numeric end;;
  }

  measure: avg_number_of_retail_trades {
    group_label: "Experience With Credit"
    label: "Average Number of Retail Trades (RT01S)"
    type: average
    value_format_name: decimal_0
    sql: ${number_of_retail_trades} ;;
  }

  measure: max_number_of_retail_trades {
    group_label: "Experience With Credit"
    label: "Maximum Number of Retail Trades (RT01S)"
    type: max
    value_format_name: decimal_0
    sql: ${number_of_retail_trades} ;;
  }

  measure: min_number_of_retail_trades {
    group_label: "Experience With Credit"
    label: "Minimum Number of Retail Trades (RT01S)"
    type: min
    value_format_name: decimal_0
    sql: ${number_of_retail_trades} ;;
  }

  measure: median_number_of_retail_trades {
    group_label: "Experience With Credit"
    label: "Median Number of Retail Trades (RT01S)"
    type: median
    value_format_name: decimal_0
    sql: ${number_of_retail_trades} ;;
  }

  dimension: months_since_oldest_retail_trade_opened {
    group_label: "Experience With Credit"
    label: "BC20S: Months Since Oldest Retail Trade Opened"
    type: number
    value_format_name: decimal_0
    sql: case when (((${parsed_data}->>'00V71')::json->>'RT20S')::numeric < 0)  or (((${parsed_data}->>'00V71')::json->>'RT20S')::numeric = 999) then NULL else ((${parsed_data}->>'00V71')::json->>'RT20S')::numeric end;;
  }

  measure: avg_months_since_oldest_retail_trade_opened {
    group_label: "Experience With Credit"
    label: "Average Months Since Oldest Retail Trade Opened (RT20S)"
    type: average
    value_format_name: decimal_0
    sql: ${months_since_oldest_retail_trade_opened} ;;
  }

  measure: max_months_since_oldest_retail_trade_opened {
    group_label: "Experience With Credit"
    label: "Maximum Months Since Oldest Retail Trade Opened (RT20S)"
    type: max
    value_format_name: decimal_0
    sql: ${months_since_oldest_retail_trade_opened} ;;
  }

  measure: min_months_since_oldest_retail_trade_opened {
    group_label: "Experience With Credit"
    label: "Minimum Months Since Oldest Retail Trade Opened (RT20S)"
    type: min
    value_format_name: decimal_0
    sql: ${months_since_oldest_retail_trade_opened} ;;
  }

  measure: median_months_since_oldest_retail_trade_opened {
    group_label: "Experience With Credit"
    label: "Median Months Since Oldest Retail Trade Opened (RT20S)"
    type: median
    value_format_name: decimal_0
    sql: ${months_since_oldest_retail_trade_opened} ;;
  }

  dimension: months_since_newest_retail_trade_opened {
    group_label: "Experience With Credit"
    label: "BC21S: Months Since Newest Retail Trade Opened"
    type: number
    value_format_name: decimal_0
    sql: case when (((${parsed_data}->>'00V71')::json->>'RT21S')::numeric < 0)  or (((${parsed_data}->>'00V71')::json->>'RT21S')::numeric = 999) then NULL else ((${parsed_data}->>'00V71')::json->>'RT21S')::numeric end;;
  }

  measure: avg_months_since_newest_retail_trade_opened {
    group_label: "Experience With Credit"
    label: "Average Months Since Newest Retail Trade Opened (RT21S)"
    type: average
    value_format_name: decimal_0
    sql: ${months_since_newest_retail_trade_opened} ;;
  }

  measure: max_months_since_newest_retail_trade_opened {
    group_label: "Experience With Credit"
    label: "Maximum Months Since Newest Retail Trade Opened (RT21S)"
    type: max
    value_format_name: decimal_0
    sql: ${months_since_newest_retail_trade_opened} ;;
  }

  measure: min_months_since_newest_retail_trade_opened {
    group_label: "Experience With Credit"
    label: "Minimum Months Since Newest Retail Trade Opened (RT21S)"
    type: min
    value_format_name: decimal_0
    sql: ${months_since_newest_retail_trade_opened} ;;
  }

  measure: median_months_since_newest_retail_trade_opened {
    group_label: "Experience With Credit"
    label: "Median Months Since Newest Retail Trade Opened (RT21S)"
    type: median
    value_format_name: decimal_0
    sql: ${months_since_newest_retail_trade_opened} ;;
  }

  # all cards
  dimension: number_of_card_trades {
    group_label: "Experience With Credit"
    label: "BC01S + RT01S: Number of Card Trades"
    description: "Bank cards + Retail Cards"
    type: number
    value_format_name: decimal_0
    sql: ${number_of_creditcard_trades} + ${number_of_retail_trades} ;;
  }

  measure: avg_number_of_card_trades {
    group_label: "Experience With Credit"
    label: "Average Number of Card Trades (BC01S + RT01S)"
    type: average
    value_format_name: decimal_0
    sql: ${number_of_card_trades} ;;
  }

  measure: max_number_of_card_trades {
    group_label: "Experience With Credit"
    label: "Maximum Number of Card Trades (BC01S + RT01S)"
    type: max
    value_format_name: decimal_0
    sql: ${number_of_card_trades} ;;
  }

  measure: min_number_of_card_trades {
    group_label: "Experience With Credit"
    label: "Minimum Number of Card Trades (BC01S + RT01S)"
    type: min
    value_format_name: decimal_0
    sql: ${number_of_card_trades} ;;
  }

  measure: median_number_of_card_trades {
    group_label: "Experience With Credit"
    label: "Median Number of Card Trades (BC01S + RT01S)"
    type: median
    value_format_name: decimal_0
    sql: ${number_of_card_trades} ;;
  }

  dimension: months_since_oldest_card_trade_opened {
    group_label: "Experience With Credit"
    label: "BC20S: Months Since Oldest Card Trade Opened"
    type: number
    value_format_name: decimal_0
    sql: case
            when ${months_since_oldest_creditcard_trade_opened} is null and ${months_since_oldest_retail_trade_opened} is null then NULL
            when ${months_since_oldest_creditcard_trade_opened} is null and ${months_since_oldest_retail_trade_opened} is not null then ${months_since_oldest_retail_trade_opened}
            when ${months_since_oldest_creditcard_trade_opened} is not null and ${months_since_oldest_retail_trade_opened} is null then ${months_since_oldest_creditcard_trade_opened}
            when ${months_since_oldest_creditcard_trade_opened} is not null and ${months_since_oldest_retail_trade_opened} is not null max(${months_since_oldest_creditcard_trade_opened}, ${months_since_oldest_retail_trade_opened})
            else 99999999
        end
  }

  measure: avg_months_since_oldest_card_trade_opened {
    group_label: "Experience With Credit"
    label: "Average Months Since Oldest Card Trade Opened (BC20S)"
    type: average
    value_format_name: decimal_0
    sql: ${months_since_oldest_card_trade_opened} ;;
  }

  measure: max_months_since_oldest_card_trade_opened {
    group_label: "Experience With Credit"
    label: "Maximum Months Since Oldest Card Trade Opened (BC20S)"
    type: max
    value_format_name: decimal_0
    sql: ${months_since_oldest_card_trade_opened} ;;
  }

  measure: min_months_since_oldest_card_trade_opened {
    group_label: "Experience With Credit"
    label: "Minimum Months Since Oldest Card Trade Opened (BC20S)"
    type: min
    value_format_name: decimal_0
    sql: ${months_since_oldest_card_trade_opened} ;;
  }

  measure: median_months_since_oldest_card_trade_opened {
    group_label: "Experience With Credit"
    label: "Median Months Since Oldest Card Trade Opened (BC20S)"
    type: median
    value_format_name: decimal_0
    sql: ${months_since_oldest_card_trade_opened} ;;
  }

  dimension: months_since_newest_card_trade_opened {
    group_label: "Experience With Credit"
    label: "BC21S: Months Since Newest Card Trade Opened"
    type: number
    value_format_name: decimal_0
    sql: case
            when ${months_since_newest_creditcard_trade_opened} is null and ${months_since_newest_retail_trade_opened} is null then NULL
            when ${months_since_newest_creditcard_trade_opened} is null and ${months_since_newest_retail_trade_opened} is not null then ${months_since_newest_retail_trade_opened}
            when ${months_since_newest_creditcard_trade_opened} is not null and ${months_since_newest_retail_trade_opened} is null then ${months_since_newest_creditcard_trade_opened}
            when ${months_since_newest_creditcard_trade_opened} is not null and ${months_since_newest_retail_trade_opened} is not null max(${months_since_newest_creditcard_trade_opened}, ${months_since_newest_retail_trade_opened})
            else 99999999
        end
  }

  measure: avg_months_since_newest_card_trade_opened {
    group_label: "Experience With Credit"
    label: "Average Months Since Newest Card Trade Opened (BC21S)"
    type: average
    value_format_name: decimal_0
    sql: ${months_since_newest_card_trade_opened} ;;
  }

  measure: max_months_since_newest_card_trade_opened {
    group_label: "Experience With Credit"
    label: "Maximum Months Since Newest Card Trade Opened (BC21S)"
    type: max
    value_format_name: decimal_0
    sql: ${months_since_newest_card_trade_opened} ;;
  }

  measure: min_months_since_newest_card_trade_opened {
    group_label: "Experience With Credit"
    label: "Minimum Months Since Newest Card Trade Opened (BC21S)"
    type: min
    value_format_name: decimal_0
    sql: ${months_since_newest_card_trade_opened} ;;
  }

  measure: median_months_since_newest_card_trade_opened {
    group_label: "Experience With Credit"
    label: "Median Months Since Newest Card Trade Opened (BC21S)"
    type: median
    value_format_name: decimal_0
    sql: ${months_since_newest_card_trade_opened} ;;
  }

  # customer age
  dimension: age_of_customers {
    group_label: "Experience With Credit"
    label: "age of a customer on application"
    type: number
    value_format_name: decimal_1
    sql: round((current_date-NULLIF(split_part(split_part(information,'date_of_birth: ',2),E'\n',1),'')::date)/365::numeric,1) ;;
  }

  measure: avg_age_of_customers {
    group_label: "Experience With Credit"
    label: "Average Age for Selected Accounts"
    type: average
    value_format_name: decimal_1
    sql: ${age_of_customers} ;;
  }



# Credit Appetite
  # Number of inquiries in the past ...
  dimension: inquiries_past_6_months {
    group_label: "Credit Appetite"
    label: "G980S: Number of Deduped Inquiries Past 6 Months"
    type: number
    value_format_name: decimal_0
    sql: case when (((${parsed_data}->>'00V71')::json->>'G980S')::numeric < 0)  or (((${parsed_data}->>'00V71')::json->>'G980S')::numeric = 999) then NULL else ((${parsed_data}->>'00V71')::json->>'G980S')::numeric end;;
  }

  measure: avg_inquiries_past_6_months {
    group_label: "Credit Appetite"
    label: "Average Number of Deduped Inquiries Past 6 Months (G980S)"
    type: average
    value_format_name: decimal_0
    sql: ${inquiries_past_6_months} ;;
  }

  measure: max_inquiries_past_6_months {
    group_label: "Credit Appetite"
    label: "Maximum Number of Deduped Inquiries Past 6 Months (G980S)"
    type: max
    value_format_name: decimal_0
    sql: ${inquiries_past_6_months} ;;
  }

  measure: min_inquiries_past_6_months {
    group_label: "Credit Appetite"
    label: "Minimum Number of Deduped Inquiries Past 6 Months (G980S)"
    type: min
    value_format_name: decimal_0
    sql: ${inquiries_past_6_months} ;;
  }

  measure: median_inquiries_past_6_months {
    group_label: "Credit Appetite"
    label: "Median Number of Deduped Inquiries Past 6 Months (G980S)"
    type: median
    value_format_name: decimal_0
    sql: ${inquiries_past_6_months} ;;
  }

  dimension: inquiries_past_12_months {
    group_label: "Credit Appetite"
    label: "G990S: Number of Deduped Inquiries Past 12 Months"
    type: number
    value_format_name: decimal_0
    sql: case when (((${parsed_data}->>'00V71')::json->>'G990S')::numeric < 0)  or (((${parsed_data}->>'00V71')::json->>'G990S')::numeric = 999) then NULL else ((${parsed_data}->>'00V71')::json->>'G990S')::numeric end;;
  }

  measure: avg_inquiries_past_12_months {
    group_label: "Credit Appetite"
    label: "Average Number of Deduped Inquiries Past 12 Months (G990S)"
    type: average
    value_format_name: decimal_0
    sql: ${inquiries_past_12_months} ;;
  }

  measure: max_inquiries_past_12_months {
    group_label: "Credit Appetite"
    label: "Maximum Number of Deduped Inquiries Past 12 Months (G990S)"
    type: max
    value_format_name: decimal_0
    sql: ${inquiries_past_12_months} ;;
  }

  measure: min_inquiries_past_12_months {
    group_label: "Credit Appetite"
    label: "Minimum Number of Deduped Inquiries Past 12 Months (G990S)"
    type: min
    value_format_name: decimal_0
    sql: ${inquiries_past_12_months} ;;
  }

  measure: median_inquiries_past_12_months {
    group_label: "Credit Appetite"
    label: "Median Number of Deduped Inquiries Past 12 Months (G990S)"
    type: median
    value_format_name: decimal_0
    sql: ${inquiries_past_12_months} ;;
  }

  dimension: inquiries_past_24_months {
    group_label: "Credit Appetite"
    label: "G960S: Number of Deduped Inquiries"
    type: number
    value_format_name: decimal_0
    sql: case when (((${parsed_data}->>'00V71')::json->>'G960S')::numeric < 0)  or (((${parsed_data}->>'00V71')::json->>'G960S')::numeric = 999) then NULL else ((${parsed_data}->>'00V71')::json->>'G960S')::numeric end;;
  }

  measure: avg_inquiries_past_24_months {
    group_label: "Credit Appetite"
    label: "Average Number of Deduped Inquiries (G960S)"
    type: average
    value_format_name: decimal_0
    sql: ${inquiries_past_24_months} ;;
  }

  measure: max_inquiries_past_24_months {
    group_label: "Credit Appetite"
    label: "Maximum Number of Deduped Inquiries (G960S)"
    type: max
    value_format_name: decimal_0
    sql: ${inquiries_past_24_months} ;;
  }

  measure: min_inquiries_past_24_months {
    group_label: "Credit Appetite"
    label: "Minimum Number of Deduped Inquiries (G960S)"
    type: min
    value_format_name: decimal_0
    sql: ${inquiries_past_24_months} ;;
  }

  measure: median_inquiries_past_24_months {
    group_label: "Credit Appetite"
    label: "Median Number of Deduped Inquiries (G960S)"
    type: median
    value_format_name: decimal_0
    sql: ${inquiries_past_24_months} ;;
  }

  # recent accounts/credit cards
  dimension: trades_opened_past_3_months {
    group_label: "Credit Appetite"
    label: "AT05: Number of Trades Opened Past 3 Months"
    type: number
    value_format_name: decimal_0
    sql: case when (((${parsed_data}->>'00V71')::json->>'AT05')::numeric < 0)  or (((${parsed_data}->>'00V71')::json->>'AT05')::numeric = 999) then NULL else ((${parsed_data}->>'00V71')::json->>'AT05')::numeric end;;
  }

  measure: avg_trades_opened_past_3_months {
    group_label: "Credit Appetite"
    label: "Average Number of Trades Opened Past 3 Months (AT05)"
    type: average
    value_format_name: decimal_0
    sql: ${trades_opened_past_3_months} ;;
  }

  measure: max_trades_opened_past_3_months {
    group_label: "Credit Appetite"
    label: "Maximum Number of Trades Opened Past 3 Months (AT05)"
    type: max
    value_format_name: decimal_0
    sql: ${trades_opened_past_3_months} ;;
  }

  measure: min_trades_opened_past_3_months {
    group_label: "Credit Appetite"
    label: "Minimum Number of Trades Opened Past 3 Months (AT05)"
    type: min
    value_format_name: decimal_0
    sql: ${trades_opened_past_3_months} ;;
  }

  measure: median_trades_opened_past_3_months {
    group_label: "Credit Appetite"
    label: "Median Number of Trades Opened Past 3 Months (AT05)"
    type: median
    value_format_name: decimal_0
    sql: ${trades_opened_past_3_months} ;;
  }

  dimension: trades_opened_past_6_months {
    group_label: "Credit Appetite"
    label: "AT06S: Number of Trades Opened Past 6 Months"
    type: number
    value_format_name: decimal_0
    sql: case when (((${parsed_data}->>'00V71')::json->>'AT06S')::numeric < 0)  or (((${parsed_data}->>'00V71')::json->>'AT06S')::numeric = 999) then NULL else ((${parsed_data}->>'00V71')::json->>'AT06S')::numeric end;;
  }

  measure: avg_trades_opened_past_6_months {
    group_label: "Credit Appetite"
    label: "Average Number of Trades Opened Past 6 Months (AT06S)"
    type: average
    value_format_name: decimal_0
    sql: ${trades_opened_past_6_months} ;;
  }

  measure: max_trades_opened_past_6_months {
    group_label: "Credit Appetite"
    label: "Maximum Number of Trades Opened Past 6 Months (AT06S)"
    type: max
    value_format_name: decimal_0
    sql: ${trades_opened_past_6_months} ;;
  }

  measure: min_trades_opened_past_6_months {
    group_label: "Credit Appetite"
    label: "Minimum Number of Trades Opened Past 6 Months (AT06S)"
    type: min
    value_format_name: decimal_0
    sql: ${trades_opened_past_6_months} ;;
  }

  measure: median_trades_opened_past_6_months {
    group_label: "Credit Appetite"
    label: "Median Number of Trades Opened Past 6 Months (AT06S)"
    type: median
    value_format_name: decimal_0
    sql: ${trades_opened_past_6_months} ;;
  }

  dimension: creditcard_trades_opened_past_6_months {
    group_label: "Credit Appetite"
    label: "BC06S: Number of Credit Card Trades Opened Past 6 Months"
    type: number
    value_format_name: decimal_0
    sql: case when (((${parsed_data}->>'00V71')::json->>'BC06S')::numeric < 0)  or (((${parsed_data}->>'00V71')::json->>'BC06S')::numeric = 999) then NULL else ((${parsed_data}->>'00V71')::json->>'BC06S')::numeric end;;
  }

  measure: avg_creditcard_trades_opened_past_6_months {
    group_label: "Credit Appetite"
    label: "Average Number of Credit Card Trades Opened Past 6 Months (BC06S)"
    type: average
    value_format_name: decimal_0
    sql: ${creditcard_trades_opened_past_6_months} ;;
  }

  measure: max_creditcard_trades_opened_past_6_months {
    group_label: "Credit Appetite"
    label: "Maximum Number of Credit Card Trades Opened Past 6 Months (BC06S)"
    type: max
    value_format_name: decimal_0
    sql: ${creditcard_trades_opened_past_6_months} ;;
  }

  measure: min_creditcard_trades_opened_past_6_months {
    group_label: "Credit Appetite"
    label: "Minimum Number of Credit Card Trades Opened Past 6 Months (BC06S)"
    type: min
    value_format_name: decimal_0
    sql: ${creditcard_trades_opened_past_6_months} ;;
  }

  measure: median_creditcard_trades_opened_past_6_months {
    group_label: "Credit Appetite"
    label: "Median Number of Credit Card Trades Opened Past 6 Months (BC06S)"
    type: median
    value_format_name: decimal_0
    sql: ${creditcard_trades_opened_past_6_months} ;;
  }



# Credit Usage
  # Utilization of revolving trades
  dimension: utilization_of_revolving_trades {
    group_label: "Credit Usage"
    label: "RE34S: Utilization for Open Revolving Trades Verified in Past 12 Months"
    type: number
    value_format_name: percent_0
    sql: 0.01 * case when (((${parsed_data}->>'00V71')::json->>'RE34S')::numeric < 0)  or (((${parsed_data}->>'00V71')::json->>'RE34S')::numeric = 999) then NULL else ((${parsed_data}->>'00V71')::json->>'RE34S')::numeric end;;
  }

  measure: avg_utilization_of_revovling_trades {
    group_label: "Credit Usage"
    label: "Average Utilization for Open Revolving Trades Verified in Past 12 Months (RE34S)"
    type: average
    value_format_name: percent_0
    sql: ${utilization_of_revolving_trades} ;;
  }

  measure: max_utilization_of_revovling_trades {
    group_label: "Credit Usage"
    label: "Maximum Utilization for Open Revolving Trades Verified in Past 12 Months (RE34S)"
    type: max
    value_format_name: percent_0
    sql: ${utilization_of_revolving_trades} ;;
  }

  measure: min_utilization_of_revovling_trades {
    group_label: "Credit Usage"
    label: "Minimum Utilization for Open Revolving Trades Verified in Past 12 Months (RE34S)"
    type: min
    value_format_name: percent_0
    sql: ${utilization_of_revolving_trades} ;;
  }

  measure: median_utilization_of_revovling_trades {
    group_label: "Credit Usage"
    label: "Median Utilization for Open Revolving Trades Verified in Past 12 Months (RE34S)"
    type: median
    value_format_name: percent_0
    sql: ${utilization_of_revolving_trades} ;;
  }

  # utilization of credit cards
  dimension: utilization_of_creditcard_trades {
    group_label: "Credit Usage"
    label: "BC34S: Utilization for Open Credit Card Trades Verified in Past 12 Months"
    type: number
    value_format_name: percent_0
    sql: 0.01 * case when (((${parsed_data}->>'00V71')::json->>'BC34S')::numeric < 0)  or (((${parsed_data}->>'00V71')::json->>'BC34S')::numeric = 999) then NULL else ((${parsed_data}->>'00V71')::json->>'BC34S')::numeric end;;
  }

  measure: avg_utilization_of_creditcard_trades {
    group_label: "Credit Usage"
    label: "Average Utilization for Open Credit Card Trades Verified in Past 12 Months (BC34S)"
    type: average
    value_format_name: percent_0
    sql: ${utilization_of_creditcard_trades} ;;
  }

  measure: max_utilization_of_creditcard_trades {
    group_label: "Credit Usage"
    label: "Maximum Utilization for Open Credit Card Trades Verified in Past 12 Months (BC34S)"
    type: max
    value_format_name: percent_0
    sql: ${utilization_of_creditcard_trades} ;;
  }

  measure: min_utilization_of_creditcard_trades {
    group_label: "Credit Usage"
    label: "Minimum Utilization for Open Credit Card Trades Verified in Past 12 Months (BC34S)"
    type: min
    value_format_name: percent_0
    sql: ${utilization_of_creditcard_trades} ;;
  }

  measure: median_utilization_of_creditcard_trades {
    group_label: "Credit Usage"
    label: "Median Utilization for Open Credit Card Trades Verified in Past 12 Months (BC34S)"
    type: median
    value_format_name: percent_0
    sql: ${utilization_of_creditcard_trades} ;;
  }

  # overall balance & limit (including mortgage & home equity)
  dimension:  total_balance {
    group_label: "Credit Usage"
    label: "AT33S: Total Balance of Open Trades Verified in Past 12 Months"
    type: number
    value_format_name: usd_0
    sql: case when (((${parsed_data}->>'00V71')::json->>'AT33A')::numeric < 0)  or (((${parsed_data}->>'00V71')::json->>'AT33A')::numeric = 999) then NULL else ((${parsed_data}->>'00V71')::json->>'AT33A')::numeric end;;
  }

  measure: avg_balance {
    group_label: "Credit Usage"
    label: "Average Total Balance of Open Trades Verified in Past 12 Months (AT33S)"
    type: average
    value_format_name: usd_0
    sql: ${total_balance} ;;
  }

  measure: max_balance {
    group_label: "Credit Usage"
    label: "Maximum Total Balance of Open Trades Verified in Past 12 Months (AT33S)"
    type: max
    value_format_name: usd_0
    sql: ${total_balance} ;;
  }

  measure: min_balance {
    group_label: "Credit Usage"
    label: "Minimum Total Balance of Open Trades Verified in Past 12 Months (AT33S)"
    type: min
    value_format_name: usd_0
    sql: ${total_balance} ;;
  }

  measure: median_balance {
    group_label: "Credit Usage"
    label: "Median Total Balance of Open Trades Verified in Past 12 Months (AT33S)"
    type: median
    value_format_name: usd_0
    sql: ${total_balance} ;;
  }

  dimension: total_limit {
    group_label: "Credit Usage"
    label: "AT28A: Total Credit Line of Open Trades Verified in Past 12 Months"
    type: number
    value_format_name: usd_0
    sql: case when (((${parsed_data}->>'00V71')::json->>'AT28A')::numeric < 0)  or (((${parsed_data}->>'00V71')::json->>'AT28A')::numeric = 999) then NULL else ((${parsed_data}->>'00V71')::json->>'AT28A')::numeric end;;
  }

  measure: avg_limit {
    group_label: "Credit Usage"
    label: "Average Total Credit Line of Open Trades Verified in Past 12 Months"
    type: average
    value_format_name: usd_0
    sql: ${total_limit} ;;
  }

  measure: max_limit {
    group_label: "Credit Usage"
    label: "Maximum Total Credit Line of Open Trades Verified in Past 12 Months"
    type: max
    value_format_name: usd_0
    sql: ${total_limit} ;;
  }

  measure: min_limit {
    group_label: "Credit Usage"
    label: "Minimum Total Credit Line of Open Trades Verified in Past 12 Months"
    type: min
    value_format_name: usd_0
    sql: ${total_limit} ;;
  }

  measure: median_limit {
    group_label: "Credit Usage"
    label: "Median Total Credit Line of Open Trades Verified in Past 12 Months"
    type: median
    value_format_name: usd_0
    sql: ${total_limit} ;;
  }

  # overall balance & limit (without mortgage & home equity)
  dimension: total_balance_without_mortgage_home_equity {
    group_label: "Credit Usage"
    label: "AT33B: Total Balance of Open Trades Without Mortgage and Home Equity Verified in Past 12 Months"
    type: number
    value_format_name: usd_0
    sql: case when (((${parsed_data}->>'00V71')::json->>'AT33B')::numeric < 0)  or (((${parsed_data}->>'00V71')::json->>'AT33B')::numeric = 999) then NULL else ((${parsed_data}->>'00V71')::json->>'AT33B')::numeric end;;
  }

  measure: avg_balance_without_mortgage_home_equity {
    group_label: "Credit Usage"
    label: "Average Total Balance of Open Trades Without Mortgage and Home Equity Verified in Past 12 Months (AT33B)"
    type: average
    value_format_name: usd_0
    sql: ${total_balance_without_mortgage_home_equity} ;;
  }

  measure: max_balance_without_mortgage_home_equity {
    group_label: "Credit Usage"
    label: "Maximum Total Balance of Open Trades Without Mortgage and Home Equity Verified in Past 12 Months (AT33B)"
    type: max
    value_format_name: usd_0
    sql: ${total_balance_without_mortgage_home_equity} ;;
  }

  measure: min_balance_without_mortgage_home_equity {
    group_label: "Credit Usage"
    label: "Minimum Total Balance of Open Trades Without Mortgage and Home Equity Verified in Past 12 Months (AT33B)"
    type: min
    value_format_name: usd_0
    sql: ${total_balance_without_mortgage_home_equity} ;;
  }

  measure: median_balance_without_mortgage_home_equity {
    group_label: "Credit Usage"
    label: "Median Total Balance of Open Trades Without Mortgage and Home Equity Verified in Past 12 Months (AT33B)"
    type: median
    value_format_name: usd_0
    sql: ${total_balance_without_mortgage_home_equity} ;;
  }

  dimension: total_limit_without_mortgage_home_equity {
    group_label: "Credit Usage"
    label: "AT28B: Total Credit Line of Open Trades Without Mortgage and Home Equity Verified in Past 12 Months"
    type: number
    value_format_name: usd_0
    sql: case when (((${parsed_data}->>'00V71')::json->>'AT28B')::numeric < 0)  or (((${parsed_data}->>'00V71')::json->>'AT28B')::numeric = 999) then NULL else ((${parsed_data}->>'00V71')::json->>'AT28B')::numeric end;;
  }

  measure: avg_limit_without_mortgage {
    group_label: "Credit Usage"
    label: "Average Total Credit Line of Open Trades Without Mortgage and Home Equity Verified in Past 12 Months (AT28B)"
    type: average
    value_format_name: usd_0
    sql: ${total_limit_without_mortgage_home_equity} ;;
  }

  measure: max_limit_without_mortgage {
    group_label: "Credit Usage"
    label: "Maximum Total Credit Line of Open Trades Without Mortgage and Home Equity Verified in Past 12 Months (AT28B)"
    type: max
    value_format_name: usd_0
    sql: ${total_limit_without_mortgage_home_equity} ;;
  }

  measure: min_limit_without_mortgage {
    group_label: "Credit Usage"
    label: "Minimum Total Credit Line of Open Trades Without Mortgage and Home Equity Verified in Past 12 Months (AT28B)"
    type: min
    value_format_name: usd_0
    sql: ${total_limit_without_mortgage_home_equity} ;;
  }

  measure: median_limit_without_mortgage {
    group_label: "Credit Usage"
    label: "Median Total Credit Line of Open Trades Without Mortgage and Home Equity Verified in Past 12 Months (AT28B)"
    type: median
    value_format_name: usd_0
    sql: ${total_limit_without_mortgage_home_equity} ;;
  }

  # number of cards, balance & limit for all cards
  dimension: number_of_open_creditcard_trades {
    group_label: "Credit Usage"
    label: "BC02S: Number of Open Credit Card Trades"
    type: number
    value_format_name: decimal_0
    sql: case when (((${parsed_data}->>'00V71')::json->>'BC02S')::numeric < 0)  or (((${parsed_data}->>'00V71')::json->>'BC02S')::numeric = 999) then NULL else ((${parsed_data}->>'00V71')::json->>'BC02S')::numeric end;;
  }

  measure: avg_number_of_open_creditcard_trades {
    group_label: "Credit Usage"
    label: "Average Number of Open Credit Card Trades (BC02S)"
    type: average
    value_format_name: decimal_0
    sql: ${number_of_open_creditcard_trades} ;;
  }

  measure: max_number_of_open_creditcard_trades {
    group_label: "Credit Usage"
    label: "Maximum Number of Open Credit Card Trades (BC02S)"
    type: max
    value_format_name: decimal_0
    sql: ${number_of_open_creditcard_trades} ;;
  }

  measure: min_number_of_open_creditcard_trades {
    group_label: "Credit Usage"
    label: "Minimum Number of Open Credit Card Trades (BC02S)"
    type: min
    value_format_name: decimal_0
    sql: ${number_of_open_creditcard_trades} ;;
  }

  measure: median_number_of_open_creditcard_trades {
    group_label: "Credit Usage"
    label: "Median Number of Open Credit Card Trades (BC02S)"
    type: median
    value_format_name: decimal_0
    sql: ${number_of_open_creditcard_trades} ;;
  }

  dimension: total_open_creditcard_trades_balance {
    group_label: "Credit Usage"
    label: "BC33S: Total Balance of Open Credit Card Trades Verified in Past 12 Months"
    type: number
    value_format_name: usd_0
    sql: case when (((${parsed_data}->>'00V71')::json->>'BC33S')::numeric < 0)  or (((${parsed_data}->>'00V71')::json->>'BC33S')::numeric = 999) then NULL else ((${parsed_data}->>'00V71')::json->>'BC33S')::numeric end;;
  }

  measure: avg_open_creditcard_trades_balance {
    group_label: "Credit Usage"
    label: "Average Total Credit Card Balance of Open Credit Card Trades Verified in Past 12 Months (BC33S)"
    type: average
    value_format_name: usd_0
    sql: ${total_open_creditcard_trades_balance} ;;
  }

  measure: max_open_creditcard_trades_balance {
    group_label: "Credit Usage"
    label: "Maximum Total Credit Card Balance of Open Credit Card Trades Verified in Past 12 Months (BC33S)"
    type: max
    value_format_name: usd_0
    sql: ${total_open_creditcard_trades_balance} ;;
  }

  measure: min_open_creditcard_trades_balance {
    group_label: "Credit Usage"
    label: "Minimum Total Credit Card Balance of Open Credit Card Trades Verified in Past 12 Months (BC33S)"
    type: min
    value_format_name: usd_0
    sql: ${total_open_creditcard_trades_balance} ;;
  }

  measure: median_open_creditcard_trades_balance {
    group_label: "Credit Usage"
    label: "Median Total Credit Card Balance of Open Credit Card Trades Verified in Past 12 Months (BC33S)"
    type: median
    value_format_name: usd_0
    sql: ${total_open_creditcard_trades_balance} ;;
  }

  dimension: total_open_creditcard_trades_limit {
    group_label: "Credit Usage"
    label: "BC28S: Total Credit Line of Open Credit Card Trades Verified in Past 12 Months"
    type: number
    value_format_name: usd_0
    sql: case when (((${parsed_data}->>'00V71')::json->>'BC28S')::numeric < 0)  or (((${parsed_data}->>'00V71')::json->>'BC28S')::numeric = 999) then NULL else ((${parsed_data}->>'00V71')::json->>'BC28S')::numeric end;;
  }

  measure: avg_open_creditcard_trades_limit {
    group_label: "Credit Usage"
    label: "Average Total Credit Line of Open Credit Card Trades Verified in Past 12 Months (BC28S)"
    type: average
    value_format_name: usd_0
    sql: ${total_open_creditcard_trades_limit} ;;
  }

  measure: max_open_creditcard_trades_limit {
    group_label: "Credit Usage"
    label: "Maximum Total Credit Line of Open Credit Card Trades Verified in Past 12 Months (BC28S)"
    type: max
    value_format_name: usd_0
    sql: ${total_open_creditcard_trades_limit} ;;
  }

  measure: min_open_creditcard_trades_limit {
    group_label: "Credit Usage"
    label: "Minimum Total Credit Line of Open Credit Card Trades Verified in Past 12 Months (BC28S)"
    type: min
    value_format_name: usd_0
    sql: ${total_open_creditcard_trades_limit} ;;
  }

  measure: median_open_creditcard_trades_limit {
    group_label: "Credit Usage"
    label: "Median Total Credit Line of Open Credit Card Trades Verified in Past 12 Months (BC28S)"
    type: median
    value_format_name: usd_0
    sql: ${total_open_creditcard_trades_limit} ;;
  }



# Performance
  # public records
  dimension: number_of_public_records {
    group_label: "Performance"
    label: "G093S: Number of Public Records"
    type: number
    value_format_name: decimal_0
    sql: case when (((${parsed_data}->>'00V71')::json->>'G093S')::numeric < 0)  or (((${parsed_data}->>'00V71')::json->>'G093S')::numeric = 999) then NULL else ((${parsed_data}->>'00V71')::json->>'G093S')::numeric end;;
  }

  measure: avg_number_of_public_records {
    group_label: "Performance"
    label: "Average Number of Public Records (G093S)"
    type: average
    value_format_name: decimal_0
    sql: ${number_of_public_records} ;;
  }

  measure: max_number_of_public_records {
    group_label: "Performance"
    label: "Maximum Number of Public Records (G093S)"
    type: max
    value_format_name: decimal_0
    sql: ${number_of_public_records} ;;
  }

  measure: min_number_of_public_records {
    group_label: "Performance"
    label: "Minimum Number of Public Records (G093S)"
    type: min
    value_format_name: decimal_0
    sql: ${number_of_public_records} ;;
  }

  measure: median_number_of_public_records {
    group_label: "Performance"
    label: "median Number of Public Records (G093S)"
    type: median
    value_format_name: decimal_0
    sql: ${number_of_public_records} ;;
  }

  dimension: number_of_public_record_bankruptcies {
    group_label: "Performance"
    label: "G094S: Number of Public Record Bankruptcies"
    type: number
    value_format_name: decimal_0
    sql: case when (((${parsed_data}->>'00V71')::json->>'G094S')::numeric < 0)  or (((${parsed_data}->>'00V71')::json->>'G094S')::numeric = 999) then NULL else ((${parsed_data}->>'00V71')::json->>'G094S')::numeric end;;
  }

  measure: avg_number_of_public_record_bankruptcies {
    group_label: "Performance"
    label: "Average Number of Public Record Bankruptcies (G094S)"
    type: average
    value_format_name: decimal_0
    sql: ${number_of_public_record_bankruptcies} ;;
  }

  measure: max_number_of_public_record_bankruptcies {
    group_label: "Performance"
    label: "Maximum Number of Public Record Bankruptcies (G094S)"
    type: max
    value_format_name: decimal_0
    sql: ${number_of_public_record_bankruptcies} ;;
  }

  measure: min_number_of_public_record_bankruptcies {
    group_label: "Performance"
    label: "Minimum Number of Public Record Bankruptcies (G094S)"
    type: min
    value_format_name: decimal_0
    sql: ${number_of_public_record_bankruptcies} ;;
  }

  measure: median_number_of_public_record_bankruptcies {
    group_label: "Performance"
    label: "Median Number of Public Record Bankruptcies (G094S)"
    type: median
    value_format_name: decimal_0
    sql: ${number_of_public_record_bankruptcies} ;;
  }

  measure: number_of_accounts_with_public_record_bankruptcies {
    group_label: "Performance"
    label: "Number of Selected Accounts with Public Record Bankruptcies (G094S)"
    type: count_distinct
    value_format_name: decimal_0
    sql: ${transunion_credit_report_id} ;;
    filters: {
      field: number_of_public_record_bankruptcies
      value: ">0"
    }
  }

  measure: pct_of_accounts_with_public_record_bankruptcies {
    group_label: "Performance"
    label: "Percentage of Accounts with Public Record Bankruptcies"
    type: number
    value_format_name: percent_2
    sql: 1.0 * ${number_of_accounts_with_public_record_bankruptcies} / ${total_number_of_accounts_selected} ;;
  }

  dimension: number_of_public_record_bankruptcies_past_24_months {
    group_label: "Performance"
    label: "G099S: Number of Public Record Bankruptcies in Past 24 Months"
    type: number
    value_format_name: decimal_0
    sql: case when (((${parsed_data}->>'00V71')::json->>'G099S')::numeric < 0)  or (((${parsed_data}->>'00V71')::json->>'G099S')::numeric = 999) then NULL else ((${parsed_data}->>'00V71')::json->>'G099S')::numeric end;;
  }

  measure: avg_number_of_public_record_bankruptcies_past_24_months {
    group_label: "Performance"
    label: "Average Number of Public Record Bankruptcies in Past 24 Months (G099S)"
    type: average
    value_format_name: decimal_0
    sql: ${number_of_public_record_bankruptcies_past_24_months} ;;
  }

  measure: max_number_of_public_record_bankruptcies_past_24_months {
    group_label: "Performance"
    label: "Maximum Number of Public Record Bankruptcies in Past 24 Months (G099S)"
    type: max
    value_format_name: decimal_0
    sql: ${number_of_public_record_bankruptcies_past_24_months} ;;
  }

  measure: min_number_of_public_record_bankruptcies_past_24_months {
    group_label: "Performance"
    label: "Minimum Number of Public Record Bankruptcies in Past 24 Months (G099S)"
    type: min
    value_format_name: decimal_0
    sql: ${number_of_public_record_bankruptcies_past_24_months} ;;
  }

  measure: median_number_of_public_record_bankruptcies_past_24_months {
    group_label: "Performance"
    label: "Median Number of Public Record Bankruptcies in Past 24 Months (G099S)"
    type: median
    value_format_name: decimal_0
    sql: ${number_of_public_record_bankruptcies_past_24_months} ;;
  }

  dimension: months_since_newest_public_record_bankruptcy {
    group_label: "Performance"
    label: "S207S: Months Since Most Recent Public Record Bankruptcy"
    type: number
    value_format_name: decimal_0
    sql: case when (((${parsed_data}->>'00V71')::json->>'S207S')::numeric < 0)  or (((${parsed_data}->>'00V71')::json->>'S207S')::numeric = 999) then NULL else ((${parsed_data}->>'00V71')::json->>'S207S')::numeric end;;
  }

  measure: avg_months_since_newest_public_record_bankruptcy {
    group_label: "Performance"
    label: "Average Number of Months Since Most Recent Public Record Bankruptcy (S207S)"
    type: average
    value_format_name: decimal_0
    sql: ${months_since_newest_public_record_bankruptcy} ;;
  }

  measure: max_months_since_newest_public_record_bankruptcy {
    group_label: "Performance"
    label: "Maximum Number of Months Since Most Recent Public Record Bankruptcy (S207S)"
    type: max
    value_format_name: decimal_0
    sql: ${months_since_newest_public_record_bankruptcy} ;;
  }

  measure: min_months_since_newest_public_record_bankruptcy {
    group_label: "Performance"
    label: "Minimum Number of Months Since Most Recent Public Record Bankruptcy (S207S)"
    type: min
    value_format_name: decimal_0
    sql: ${months_since_newest_public_record_bankruptcy} ;;
  }

  measure: median_months_since_newest_public_record_bankruptcy {
    group_label: "Performance"
    label: "Median Number of Months Since Most Recent Public Record Bankruptcy (S207S)"
    type: median
    value_format_name: decimal_0
    sql: ${months_since_newest_public_record_bankruptcy} ;;
  }

  # derogatory
  dimension: worst_rating_creditcard_trades_past_12_months {
    group_label: "Performance"
    label: "G300S: Worst Rating on Credit Card Trades in Past 12 Months"
    type: number
    value_format_name: decimal_0
    sql: case when (((${parsed_data}->>'00V71')::json->>'G300S')::numeric < 0)  or (((${parsed_data}->>'00V71')::json->>'G300S')::numeric = 999) then NULL else ((${parsed_data}->>'00V71')::json->>'G300S')::numeric end;;
  }

  measure: avg_worst_rating_creditcard_trades_past_12_months {
    group_label: "Performance"
    label: "Average of Worst Rating on Credit Card Trades in Past 12 Months (G300S)"
    type: average
    value_format_name: decimal_0
    sql: ${worst_rating_creditcard_trades_past_12_months} ;;
  }

  measure: max_worst_rating_creditcard_trades_past_12_months {
    group_label: "Performance"
    label: "Maximum of Worst Rating on Credit Card Trades in Past 12 Months (G300S)"
    type: max
    value_format_name: decimal_0
    sql: ${worst_rating_creditcard_trades_past_12_months} ;;
  }

  measure: min_worst_rating_creditcard_trades_past_12_months {
    group_label: "Performance"
    label: "Minimum of Worst Rating on Credit Card Trades in Past 12 Months (G300S)"
    type: min
    value_format_name: decimal_0
    sql: ${worst_rating_creditcard_trades_past_12_months} ;;
  }

  measure: median_worst_rating_creditcard_trades_past_12_months {
    group_label: "Performance"
    label: "Median of Worst Rating on Credit Card Trades in Past 12 Months (G300S)"
    type: median
    value_format_name: decimal_0
    sql: ${worst_rating_creditcard_trades_past_12_months} ;;
  }

  dimension: number_30_delq_past_12_months {
    group_label: "Performance"
    label: "G001S: Number of 30 Days Past Due Ratings in Past 12 Months"
    type: number
    value_format_name: decimal_0
    sql: case when (((${parsed_data}->>'00V71')::json->>'G001S')::numeric < 0)  or (((${parsed_data}->>'00V71')::json->>'G001S')::numeric = 999) then NULL else ((${parsed_data}->>'00V71')::json->>'G001S')::numeric end;;
  }

  measure: avg_number_30_delq_past_12_months {
    group_label: "Performance"
    label: "Average Number of 30 Days Past Due Ratings in Past 12 Months (G001S)"
    type: average
    value_format_name: decimal_0
    sql: ${number_30_delq_past_12_months} ;;
  }

  measure: max_number_30_delq_past_12_months {
    group_label: "Performance"
    label: "Maximum Number of 30 Days Past Due Ratings in Past 12 Months (G001S)"
    type: max
    value_format_name: decimal_0
    sql: ${number_30_delq_past_12_months} ;;
  }

  measure: min_number_30_delq_past_12_months {
    group_label: "Performance"
    label: "Minimum Number of 30 Days Past Due Ratings in Past 12 Months (G001S)"
    type: min
    value_format_name: decimal_0
    sql: ${number_30_delq_past_12_months} ;;
  }

  measure: median_number_30_delq_past_12_months {
    group_label: "Performance"
    label: "Median Number of 30 Days Past Due Ratings in Past 12 Months (G001S)"
    type: median
    value_format_name: decimal_0
    sql: ${number_30_delq_past_12_months} ;;
  }

  measure: number_of_accounts_with_30_delq_past_12_months {
    group_label: "Performance"
    label: "Number of Selected Accounts with 30 Days Past Due Ratings in Past 12 Months (G001S)"
    type: count_distinct
    value_format_name: decimal_0
    sql: ${transunion_credit_report_id} ;;
    filters: {
      field: number_30_delq_past_12_months
      value: ">0"
    }
  }

  measure: pct_of_accounts_with_30_delq_past_12_months {
    group_label: "Performance"
    label: "Percentage of Accounts with 30 Days Past Due Ratings in Past 12 Months (G001S)"
    type: number
    value_format_name: percent_2
    sql: 1.0 * ${number_of_accounts_with_30_delq_past_12_months} / ${total_number_of_accounts_selected} ;;
  }

  dimension: number_60_delq_past_12_months {
    group_label: "Performance"
    label: "G002B: Number of 60 or More Days Past Due Ratings in Past 12 Months"
    type: number
    value_format_name: decimal_0
    sql: case when (((${parsed_data}->>'00V71')::json->>'G002B')::numeric < 0)  or (((${parsed_data}->>'00V71')::json->>'G002B')::numeric = 999) then NULL else ((${parsed_data}->>'00V71')::json->>'G002B')::numeric end;;
  }

  measure: avg_number_60_delq_past_12_months {
    group_label: "Performance"
    label: "Average Number of 60 or More Days Past Due Ratings in Past 12 Months (G002B)"
    type: average
    value_format_name: decimal_0
    sql: ${number_60_delq_past_12_months} ;;
  }

  measure: max_number_60_delq_past_12_months {
    group_label: "Performance"
    label: "Maximum Number of 60 or More Days Past Due Ratings in Past 12 Months (G002B)"
    type: max
    value_format_name: decimal_0
    sql: ${number_60_delq_past_12_months} ;;
  }

  measure: min_number_60_delq_past_12_months {
    group_label: "Performance"
    label: "Minimum Number of 60 or More Days Past Due Ratings in Past 12 Months (G002B)"
    type: min
    value_format_name: decimal_0
    sql: ${number_60_delq_past_12_months} ;;
  }

  measure: median_number_60_delq_past_12_months {
    group_label: "Performance"
    label: "Median Number of 60 or More Days Past Due Ratings in Past 12 Months (G002B)"
    type: median
    value_format_name: decimal_0
    sql: ${number_60_delq_past_12_months} ;;
  }

  measure: number_of_accounts_with_60_delq_past_12_months {
    group_label: "Performance"
    label: "Number of Selected Accounts with 60 Days Past Due Ratings in Past 12 Months (G002B)"
    type: count_distinct
    value_format_name: decimal_0
    sql: ${transunion_credit_report_id} ;;
    filters: {
      field: number_60_delq_past_12_months
      value: ">0"
    }
  }

  measure: pct_of_accounts_with_60_delq_past_12_months {
    group_label: "Performance"
    label: "Percentage of Accounts with 60 Days Past Due Ratings in Past 12 Months (G002B)"
    type: number
    value_format_name: percent_2
    sql: 1.0 * ${number_of_accounts_with_60_delq_past_12_months} / ${total_number_of_accounts_selected} ;;
  }



# Used for business rules
  # read from TU report
  dimension: open_bankruptcy {
    group_label: "Approval Checks"
    label: "OPENBKC: Open Bankruptcy"
    type: number
    value_format_name: decimal_0
    sql: case when (((${parsed_data}->>'00W63')::json->>'OPENBKC')::numeric < 0)  or (((${parsed_data}->>'00W63')::json->>'OPENBKC')::numeric = 999) then NULL else ((parsed_data->>'00W63')::json->>'OPENBKC')::numeric end;;
  }

  dimension: open_satisfactory_trades {
    group_label: "Approval Checks"
    label: "AT24S: Number of Currently Open and Satisfactory Trades 6 Months or Older"
    type: number
    value_format_name: decimal_0
    sql: case when (((${parsed_data}->>'00V71')::json->>'AT24S')::numeric < 0)  or (((${parsed_data}->>'00V71')::json->>'AT24S')::numeric = 999) then NULL else ((parsed_data->>'00V71')::json->>'AT24S')::numeric end;;
  }

  dimension: total_number_of_public_records {
    group_label: "Approval Checks"
    label: "G093S: Total Number of Public Records"
    type: number
    value_format_name: decimal_0
    sql: case when (((${parsed_data}->>'00V71')::json->>'G093S')::numeric < 0)  or (((${parsed_data}->>'00V71')::json->>'G093S')::numeric = 999) then NULL else ((parsed_data->>'00V71')::json->>'G093S')::numeric end;;
  }

  dimension: open_collections_accounts {
    group_label: "Approval Checks"
    label: " G215A: Number of Third Party Collections with Balance > $0"
    type: number
    value_format_name: decimal_0
    sql: case when (((${parsed_data}->>'00V71')::json->>'G215A')::numeric < 0)  or (((${parsed_data}->>'00V71')::json->>'G215A')::numeric = 999) then NULL else ((parsed_data->>'00V71')::json->>'G215A')::numeric end;;
  }

  dimension: total_trades {
    group_label: "Approval Checks"
    label: "AT01S: Number of Trades"
    type: number
    value_format_name: decimal_0
    sql: case when (((${parsed_data}->>'00V71')::json->>'AT01S')::numeric < 0)  or (((${parsed_data}->>'00V71')::json->>'AT01S')::numeric = 999) then NULL else ((parsed_data->>'00V71')::json->>'AT01S')::numeric end;;
  }

  dimension: total_credit_inquires {
    group_label: "Approval Checks"
    label: "G960S: Number of Deduped Inquiries"
    type: number
    value_format_name: decimal_0
    sql: case when (((${parsed_data}->>'00V71')::json->>'G960S')::numeric < 0)  or (((${parsed_data}->>'00V71')::json->>'G960S')::numeric = 999) then NULL else ((parsed_data->>'00V71')::json->>'G960S')::numeric end;;
  }

  dimension: credit_inquiries_last_6_months {
    group_label: "Approval Checks"
    label: "G980S: Number of Deduped Inquiries Past 6 Months"
    type: number
    value_format_name: decimal_0
    sql: case when (((${parsed_data}->>'00V71')::json->>'G980S')::numeric < 0)  or (((${parsed_data}->>'00V71')::json->>'G980S')::numeric = 999) then NULL else ((parsed_data->>'00V71')::json->>'G980S')::numeric end;;
  }

  dimension: credit_inquiries_last_12_months {
    group_label: "Approval Checks"
    label: "G990S: Number of Deduped Inquiries Past 12 Months"
    type: number
    value_format_name: decimal_0
    sql: case when (((${parsed_data}->>'00V71')::json->>'G990S')::numeric < 0)  or (((${parsed_data}->>'00V71')::json->>'G990S')::numeric = 999) then NULL else ((parsed_data->>'00V71')::json->>'G990S')::numeric end;;
  }

  dimension: collections_inquiries {
    group_label: "Approval Checks"
    label: "G231S: Number of Collection Inquiries"
    type: number
    value_format_name: decimal_0
    sql: case when (((${parsed_data}->>'00V71')::json->>'G231S')::numeric < 0)  or (((${parsed_data}->>'00V71')::json->>'G231S')::numeric = 999) then NULL else ((parsed_data->>'00V71')::json->>'G231S')::numeric end;;
  }

  dimension: collections_inquiries_last_6_months {
    group_label: "Approval Checks"
    label: "G233S: Number of Collection Inquiries in Past 6 Months"
    type: number
    value_format_name: decimal_0
    sql: case when (((${parsed_data}->>'00V71')::json->>'G233S')::numeric < 0)  or (((${parsed_data}->>'00V71')::json->>'G233S')::numeric = 999) then NULL else ((parsed_data->>'00V71')::json->>'G233S')::numeric end;;
  }

  dimension: bankruptcies_last_24_months {
    group_label: "Approval Checks"
    label: "G099S: Number of Public Record Bankruptcies in Past 24 Months"
    type: number
    value_format_name: decimal_0
    sql: case when (((${parsed_data}->>'00V71')::json->>'G099S')::numeric < 0)  or (((${parsed_data}->>'00V71')::json->>'G099S')::numeric = 999) then NULL else ((parsed_data->>'00V71')::json->>'G099S')::numeric end;;
  }

  dimension: count_bankruptcies {
    group_label: "Approval Checks"
    label: "G094S: Number of Public Record Bankruptcies"
    type: number
    value_format_name: decimal_0
    sql: case when (((${parsed_data}->>'00V71')::json->>'G094S')::numeric < 0)  or (((${parsed_data}->>'00V71')::json->>'G094S')::numeric = 999) then NULL else ((parsed_data->>'00V71')::json->>'G094S')::numeric end;;
  }

  dimension: total_amount_collections {
    group_label: "Approval Checks"
    label: "S064A: Total Placement Amount of Third Party Collections"
    type: number
    value_format_name: usd_0
    sql: case when (((${parsed_data}->>'00V71')::json->>'S064A')::numeric < 0)  or (((${parsed_data}->>'00V71')::json->>'S064A')::numeric = 999) then NULL else ((parsed_data->>'00V71')::json->>'S064A')::numeric end;;
  }

  dimension: total_amount_non_medical_collections {
    group_label: "Approval Checks"
    label: "S064B: Total Placement Amount of Non-medical Third Party Collections"
    type: number
    value_format_name: usd_0
    sql: case when (((${parsed_data}->>'00V71')::json->>'S064B')::numeric < 0)  or (((${parsed_data}->>'00V71')::json->>'S064B')::numeric = 999) then NULL else ((parsed_data->>'00V71')::json->>'S064B')::numeric end;;
  }

  dimension: tax_liens {
    group_label: "Approval Checks"
    label: "S208S: Number of Tax Liens"
    type: number
    value_format_name: usd_0
    sql: case when (((${parsed_data}->>'00V71')::json->>'S208S')::numeric < 0)  or (((${parsed_data}->>'00V71')::json->>'S208S')::numeric = 999) then NULL else ((parsed_data->>'00V71')::json->>'S208S')::numeric end;;
  }

  dimension: months_since_most_recent_public_record_bankruptcy {
    group_label: "Approval Checks"
    label: "S207S: Months Since Most Recent Public Record Bankruptcy"
    type: number
    value_format_name: decimal_0
    sql: case when (((${parsed_data}->>'00V71')::json->>'S207S')::numeric < 0)  or (((${parsed_data}->>'00V71')::json->>'S207S')::numeric = 999) then NULL else ((parsed_data->>'00V71')::json->>'S207S')::numeric end;;
  }

  dimension: age_oldest_trade_months {
    group_label: "Approval Checks"
    label: "AT20S: Months Since Oldest Trade Opened"
    type: number
    value_format_name: decimal_0
    sql: case when (((${parsed_data}->>'00V71')::json->>'AT20S')::numeric < 0)  or (((${parsed_data}->>'00V71')::json->>'AT20S')::numeric = 999) then NULL else ((parsed_data->>'00V71')::json->>'AT20S')::numeric end;;
  }

  dimension: age_newest_trade_months {
    group_label: "Approval Checks"
    label: "AT21S: Months Since Newest Trade Opened"
    type: number
    value_format_name: decimal_0
    sql: case when (((${parsed_data}->>'00V71')::json->>'AT21S')::numeric < 0)  or (((${parsed_data}->>'00V71')::json->>'AT21S')::numeric = 999) then NULL else ((parsed_data->>'00V71')::json->>'AT21S')::numeric end;;
  }

  dimension: open_finance_installment_trades {
    group_label: "Approval Checks"
    label: "FI02S: Number of Open Finance Installment Trades"
    type: number
    value_format_name: decimal_0
    sql: case when (((${parsed_data}->>'00V71')::json->>'FI02S')::numeric < 0)  or (((${parsed_data}->>'00V71')::json->>'FI02S')::numeric = 999) then NULL else ((parsed_data->>'00V71')::json->>'FI02S')::numeric end;;
  }

  dimension: months_since_most_recent_collections_inquiry {
    group_label: "Approval Checks"
    label: "G104S: Months Since Most Recent Collection Inquiry"
    type: number
    value_format_name: decimal_0
    sql: case when (((${parsed_data}->>'00V71')::json->>'G104S')::numeric < 0)  or (((${parsed_data}->>'00V71')::json->>'G104S')::numeric = 999) then NULL else ((parsed_data->>'00V71')::json->>'G104S')::numeric end;;
  }

  dimension: months_since_most_recent_credit_inquiry {
    group_label: "Approval Checks"
    label: "G103S: Months Since Most Recent Credit Inquiry"
    type: number
    value_format_name: decimal_0
    sql: case when (((${parsed_data}->>'00V71')::json->>'G103S')::numeric < 0)  or (((${parsed_data}->>'00V71')::json->>'G103S')::numeric = 999) then NULL else ((parsed_data->>'00V71')::json->>'G103S')::numeric end;;
  }

  dimension: total_balance_excluding_housing {
    group_label: "Approval Checks"
    label: "AT101B: Total Balance of All Trades Verified in Past 12 Months Excluding Mortgage and Home Equity"
    type: number
    value_format_name: usd_0
    sql: case when (((${parsed_data}->>'00V71')::json->>'AT101B')::numeric < 0)  or (((${parsed_data}->>'00V71')::json->>'AT101B')::numeric = 999) then NULL else ((parsed_data->>'00V71')::json->>'AT101B')::numeric end;;
  }

  dimension: total_credit_card_balance {
    group_label: "Approval Checks"
    label: "BC101S: Total Balance of All Credit Card Trades Verified in Past 12 Months"
    type: number
    value_format_name: usd_0
    sql: case when (((${parsed_data}->>'00V71')::json->>'BC101S')::numeric < 0)  or (((${parsed_data}->>'00V71')::json->>'BC101S')::numeric = 999) then NULL else ((parsed_data->>'00V71')::json->>'BC101S')::numeric end;;
  }

  dimension: percentage_of_open_cc_with75p_util {
    group_label: "Approval Checks"
    label: "BC31S: Percentage of Open Credit Card Trades > 75% of Credit Line Verified in Past 12 Months"
    type: number
    value_format_name: percent_0
    sql: 0.01 * case when (((${parsed_data}->>'00V71')::json->>'BC31S')::numeric < 0)  or (((${parsed_data}->>'00V71')::json->>'BC31S')::numeric = 999) then NULL else ((parsed_data->>'00V71')::json->>'BC31S')::numeric end;;
  }

  dimension: utilization_credit_card {
    group_label: "Approval Checks"
    label: "BC34S: Utilization for Open Credit Card Trades Verified in Past 12 Months"
    type: number
    value_format_name: percent_0
    sql: 0.01 * case when (((${parsed_data}->>'00V71')::json->>'BC34S')::numeric < 0)  or (((${parsed_data}->>'00V71')::json->>'BC34S')::numeric = 999) then NULL else ((parsed_data->>'00V71')::json->>'BC34S')::numeric end;;
  }

  dimension: late30 {
    group_label: "Approval Checks"
    label: "ATTR03: 30 Days Past Due for Last Payment Date falls in Last 6 Months"
    description: "ATTR03: Number of open trade lines excluding student loans which have a Last Payment Date in the last six (6) months and which have a 30-day or more past due current manner of payment"
    type: number
    value_format_name: decimal_0
    sql: case when (((${parsed_data}->>'00W63')::json->>'ATTR03')::numeric < 0)  or (((${parsed_data}->>'00W63')::json->>'ATTR03')::numeric = 999) then NULL else ((parsed_data->>'00W63')::json->>'ATTR03')::numeric end;;
  }

  # derived fields
  dimension: fail_new_rules {
    group_label: "Approval Checks"
    label: "Fail Under New Rules"
    type: yesno
    sql: case
            when
                (${count_bankruptcies} > 1) or
                (${total_credit_card_balance} > 30000) or
                (${total_amount_non_medical_collections} > 5000) or
                (${tax_liens} > 0) or
                (${months_since_most_recent_public_record_bankruptcy} is not null and ${months_since_most_recent_public_record_bankruptcy} < 12) or
                (${credit_inquiries_last_6_months} > 10) or
                ((${count_bankruptcies} = 1) and (${months_since_most_recent_public_record_bankruptcy} < ${age_newest_trade_months})) then true
    		else false
        end;;
  }
